######## Resource bundle for labels to be displayed in OpenStego ########

# Master labels
versionString = OpenStego v0.5.2

# Error messages
err.config.useCompression.invalid = Invalid value for configuration item ''useCompression''\: {0}
err.config.useEncryption.invalid = Invalid value for configuration item ''useEncryption''\: {0}
err.config.password.invalid = Invalid password
err.config.invalidKey = Invalid configuration item provided\: {0}
err.corruptData = Embedded data is corrupt OR invalid password has been provided
err.noValidPlugin = Embedded data is corrupt OR invalid password has been provided OR no algorithm found which can handle the given stego file
err.image.type.invalid = Invalid or unsupported image format: {0}
err.image.file.invalid = Invalid or unsupported image file: {0}
err.plugin.notSpecified = No plugin specified
err.plugin.notFound = No plugin found with name: {0}
err.plugin.sigNotWm = Selected plugin does not support watermarking and so signature cannot be generated
err.image.size.mismatch = The dimensions of the two input images do not match
err.memory.full = OpenStego has run out of allocated memory while performing the operation. Please try using smaller image size
err.directory.invalid = Directory is invalid
err.permission.denied = Permission is denied for accessing the file or directory
err.file.notfound = File not found : {0}

# Labels for GUI
gui.window.title = OpenStego

gui.button.ok = OK
gui.button.cancel = Cancel

gui.label.algorithmList = Select the Steganography Algorithm to Use
gui.label.msgFile = Message File
gui.label.coverFile = Cover File
gui.label.coverFileMsg = (Select multiple files or provide wildcard (*, ?) to embed same message in multiple files)
gui.label.outputStegoFile = Output Stego File
gui.label.inputStegoFile = Input Stego File
gui.label.outputDataFolder = Output Folder for Message File

gui.label.tab.embed = Embed
gui.label.tab.extract = Extract

gui.label.option.title = Options
gui.label.option.useCompression = Compress Data
gui.label.option.useEncryption = Encrypt Data
gui.label.option.cryptoAlgorithm = Crypto Algorithm
gui.label.option.cryptoAlgorithm.ignore = Crypto Algorithm (ignore if no password)
gui.label.option.password = Password
gui.label.option.confPassword = Confirm Password

gui.label.pluginOption.title = Algorithm-specific Options
gui.label.plugin.auto = Auto-select

gui.msg.title.success = Success
gui.msg.title.warn = Warning
gui.msg.title.err = Error
gui.msg.title.input = Input
gui.msg.success.embed = Message embedded into {0} Cover file(s). Skipped {1} file(s)
gui.msg.success.extract = Message file successfully extracted from the Cover file: {0}
gui.msg.warn.fileExists = File {0} already exists. Overwrite?
gui.msg.err.mandatoryCheck = Please provide the value for {0}
gui.msg.err.passwordMismatch = Password does not match the Confirm Password
gui.msg.input.password = Please provide the password
gui.msg.err.coverFileNotFound = No match found for cover file: {0}
gui.msg.err.outputIsDir = Selected Output Stego File is a directory. Please select a file
gui.msg.err.outputShouldBeDir = Output Stego File should be a directory when multiple cover files are selected

gui.filechooser.title.msgFile = Select Message File
gui.filechooser.title.coverFile = Select Cover File
gui.filechooser.title.outputStegoFile = Select Output Stego File
gui.filechooser.title.inputStegoFile = Select Input Stego File
gui.filechooser.title.outputDataFolder = Select Output Folder for Message File
gui.filechooser.filter.coverFiles = Cover files ({0})
gui.filechooser.filter.stegoFiles = Stego files ({0})

# Labels for command line interface
cmd.usage = . Copyright (c) 2007-2009 Samir Vaidya\n\
\n\
For GUI:\n\
\  java -jar <path>{0}openstego.jar\n\
\n\
For command line interface:\n\
\  java -jar <path>{0}openstego.jar <command> [options]\n\
\n\
The first argument must be a command. Valid commands are:\n\
\n\
\  embed, --embed                Embed message into cover file\n\
\  extract, --extract            Extract message from stego file\n\
\  algorithms, --algorithms      List down supported steganography algorithms\n\
\  readformats --readformats     List down supported formats for cover file\n\
\  writeformats, --writeformats  List down supported formats for stego file\n\
\  help, --help                  Display this help. To get help on options\n\
\                                specific to an algorithm, provide the name\n\
\                                of the algorithm using ''-a'' option\n\
\n\
Following option is common for all commands other than ''algorithms'':\n\
\n\
\    -a, --algorithm <algorithm_name>\n\
\        Name of the steganography algorithm to use. List of the supported\n\
\        algorithms can be retrieved using ''algorithms'' command\n\
\n\
''embed'' options:\n\
\n\
\    -mf, --messagefile <filename>\n\
\        Source message/data file. If this option is not provided or ''-''\n\
\        (without quotes) is provided as the value then the message data is\n\
\        read from stdin\n\
\n\
\    -cf, --coverfile <filename>\n\
\        Cover file in which the message will be embedded. This option supports\n\
\        ''*'' and ''?'' wildcards for filename. If wildcard filename is provided\n\
\        then make sure that it is surrounded by double quotes.\n\
\        Multiple filenames can also be provided by separating them with '';''\n\
\        (semi-colon).\n\
\        If the wildcard expression returns more than one file, then ''-sf''\n\
\        option is ignored, and each coverfile is overwritten with the\n\
\        corresponding generated stegofile\n\
\n\
\    -sf, --stegofile <filename>\n\
\        Output stego file containing the embedded message. If this option is\n\
\        not provided or ''-'' (without quotes) is provided as the value then the\n\
\        stego file is written to stdout\n\
\n\
\    -c, --compress\n\
\        Compress the message file before embedding (default)\n\
\n\
\    -C, --nocompress\n\
\        Do not compress the message file before embedding\n\
\n\
\    -e, --encrypt\n\
\        Encrypt the message file before embedding\n\
\n\
\    -E, --noencrypt\n\
\        Do not encrypt the message file before embedding (default)\n\
\n\
\    -p, --password\n\
\        Password to be used for encryption. If this is not provided then\n\
\        prompt will be displayed for entry\n\
\n\
''extract'' options:\n\
\n\
\    -sf, --stegofile <filename>\n\
\        Stego file containing the embedded message\n\
\n\
\    -xf, --extractfile <filename>\n\
\        Optional filename for the extracted data. Use this to override the\n\
\        filename embedded in the stego file\n\
\n\
\    -xd, --extractdir <dir>\n\
\        Directory where the message file will be extracted. If this option is\n\
\        not provided, then the file is extracted to current directory\n\
\n\
\    -p, --password\n\
\        Password to be used for decryption. If this is not provided then\n\
\        prompt will be displayed for entry (if the message is encrypted)\n\
\n\
Examples:\n\
\n\
\  To embed secret.txt into wallpaper.png and generate the output into test.png:\n\
\n\
\      java -jar <path>{0}openstego.jar embed -a lsb -mf secret.txt \\\n\
\        -cf wallpaper.png -sf test.png\n\
\   OR\n\
\      java -jar <path>{0}openstego.jar --embed --algorithm=lsb \\\n\
\        --messagefile=secret.txt --coverfile=wallpaper.png --stegofile=test.png\n\
\n\
\  To extract embedded data from test.png to /data directory:\n\
\n\
\      java -jar <path>{0}openstego.jar extract -a lsb -sf test.png -xd /data\n\
\   OR\n\
\      java -jar <path>{0}openstego.jar extract --algorithm=lsb \\\n\
\        --stegofile=test.png --extractdir=/data\n\
\n\
\  Piping example:\n\
\n\
\      ls -R | java -jar <path>{0}openstego.jar embed -a lsb > test.png\n\
\n\
\  Wildcard example (Please note that the double quotes are important):\n\
\n\
\      java -jar <path>{0}openstego.jar embed -a lsb \\\n\
\        -cf \"img???.png;wall*.png\" -mf watermark.txt

cmd.msg.fileExtracted = Extracted file: {0}
cmd.msg.coverProcessed = Cover file processed and overwritten with stego data: {0}
cmd.msg.enterPassword = Enter Password:
cmd.msg.coverFileNotFound = No match found for cover file: {0}
cmd.warn.stegoFileIgnored = WARNING: Stegofile name has been ignored, because multiple coverfiles are provided. Each \
                            coverfile will be overwritten with the generated stegofile
cmd.label.purpose.caption = Purpose:
cmd.label.purpose.DH = Data Hiding
cmd.label.purpose.WM = Watermarking
